// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using ReactiveUI;
using UIKit;
using UIKit.Rx;

namespace NavDrawer.iOS
{
	public partial class DrawerViewController : ReactiveViewController, IUITableViewDataSource, IViewFor<NavDrawerViewModel>
	{
		public DrawerViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			this.OneWayBind(this.ViewModel, vm => vm.DisplayName, vc => vc.DisplayNameLabel.Text);
			this.OneWayBind(this.ViewModel, vm => vm.Email, vc => vc.EmailLabel.Text);
			
            this.MenuTableView.RegisterNibForCellReuse(MenuViewCell.Nib, MenuViewCell.Key);

			MenuTableView.RowHeight = UITableView.AutomaticDimension;
			MenuTableView.EstimatedRowHeight = 46f;

			MenuTableView.TableFooterView = new UIView();

			var tvd = new UITableViewDelegateRx();
			MenuTableView.Delegate = tvd;
			MenuTableView.DataSource = this;

			tvd.RowSelectedObs.Subscribe(cell =>
			{
				var index = cell.Item2.Row;

				var selectedMenu = this.ViewModel.AllMenu[index];

				cell.Item1.DeselectRow(cell.Item2, false);
				switch (selectedMenu.IconName)
				{
					case "HomeIcon":
						this.ViewModel.SelectedMenu = MenuAction.Home;
						break;
					case "SearchIcon":
						this.ViewModel.SelectedMenu = MenuAction.Search;
						break;
					case "SyncIcon":
						this.ViewModel.SelectedMenu = MenuAction.Sync;
						break;
					case "SettingIcon":
						this.ViewModel.SelectedMenu = MenuAction.Settings;
						break;
					case "LogoutIcon":
						this.ViewModel.SelectedMenu = MenuAction.Logout;
						break;
				}
			});
		}

		public UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
		{
			var cell = (MenuViewCell)tableView.DequeueReusableCell(MenuViewCell.Key);
			cell.ViewModel = this.ViewModel.AllMenu[indexPath.Row];

			var selectedView = new UIView
			{
				BackgroundColor = UIColor.DarkGray
			};

			cell.SelectedBackgroundView = selectedView;

			return cell;
		}

		public nint RowsInSection(UITableView tableView, nint section)
		{
			return this.ViewModel.AllMenu.Count;
		}

		NavDrawerViewModel _ViewModel;

		public NavDrawerViewModel ViewModel
		{
		get { return _ViewModel; }
		set { this.RaiseAndSetIfChanged(ref _ViewModel, value); }
		}

		object IViewFor.ViewModel
		{
			get { return ViewModel; }
			set { ViewModel = (NavDrawerViewModel)value; }
		}
	}
}
